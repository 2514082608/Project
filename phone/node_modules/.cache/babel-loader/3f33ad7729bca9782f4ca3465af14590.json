{"remainingRequest":"E:\\BaiduNetdiskDownload\\作业\\三阶段作业\\phone\\node_modules\\babel-loader\\lib\\index.js!E:\\BaiduNetdiskDownload\\作业\\三阶段作业\\phone\\src\\store\\moudel\\home.js","dependencies":[{"path":"E:\\BaiduNetdiskDownload\\作业\\三阶段作业\\phone\\src\\store\\moudel\\home.js","mtime":1597233132182},{"path":"E:\\BaiduNetdiskDownload\\作业\\三阶段作业\\phone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\作业\\三阶段作业\\phone\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\BaiduNetdiskDownload\\\\\\u4F5C\\u4E1A\\\\\\u4E09\\u9636\\u6BB5\\u4F5C\\u4E1A\\\\phone\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport * as types from \"../types.js\";\nimport axios from 'axios'; //仓库管理存储的数据\n\nvar state = {\n  homeData: [] //接收组件发送过来的请求 组件可以通过dispath  或者 mapaction 发送到这里\n\n};\n\nvar actions = _defineProperty({}, types.home, function (_ref, payload) {\n  var state = _ref.state,\n      commit = _ref.commit;\n  //方法接受两个参数，第一个是store身上的属性方法，state仓库，commit是用于传递给mutations的方法\n  //第二个是负载 就是组件传过来的时候携带的参数\n  axios({\n    //这里发送请求 拿到数据\n    url: '/api/goods/shopList',\n    params: {\n      _limit: 6,\n      token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZjE5OWE0ZDUwMWM4Y2E2MTFkMmZjNTkiLCJpYXQiOjE1OTcyMzIyNTEsImV4cCI6MTU5NzMxODY1MX0.JXT9wee5kBiaHLIJJZ5MrPrEiJNCrxXbcRgNcPSAM_M'\n    }\n  }).then(function (res) {\n    console.log(res.data.data); //拿到请求回来的数据后，使用commit方法向mutations发送过去\n    //第一个参数是mutations写好的方法名，第二个是负载 \n\n    commit(types.home, res.data.data);\n  });\n}); //接收actions发送过来的请求\n\n\nvar mutations = _defineProperty({}, types.home, function (state, payload) {\n  state.homeData = payload;\n}); //处理一下结果\n\n\nvar getters = {};\nexport default {\n  namespaced: true,\n  //命名空间的模块。模块内部直接调用，外部需要命名空间(见组件)\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["E:\\BaiduNetdiskDownload\\作业\\三阶段作业\\phone\\src\\store\\moudel\\home.js"],"names":["types","axios","state","homeData","actions","home","payload","commit","url","params","_limit","token","then","res","console","log","data","mutations","getters","namespaced"],"mappings":";AAAA,OAAO,KAAKA,KAAZ;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,KAAK,GAAG;AACbC,EAAAA,QAAQ,EAAC,EADI,CAId;;AAJc,CAAd;;AAKA,IAAMC,OAAO,uBAGVJ,KAAK,CAACK,IAHI,EAGG,gBAAgBC,OAAhB,EAA0B;AAAA,MAAxBJ,KAAwB,QAAxBA,KAAwB;AAAA,MAAlBK,MAAkB,QAAlBA,MAAkB;AACvC;AACA;AACEN,EAAAA,KAAK,CAAC;AACR;AACIO,IAAAA,GAAG,EAAC,qBAFA;AAGJC,IAAAA,MAAM,EAAC;AAACC,MAAAA,MAAM,EAAC,CAAR;AAAUC,MAAAA,KAAK,EAAC;AAAhB;AAHH,GAAD,CAAL,CAIGC,IAJH,CAKE,UAAAC,GAAG,EAAE;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASA,IAArB,EADO,CAEP;AACA;;AACAT,IAAAA,MAAM,CAACP,KAAK,CAACK,IAAP,EAAYQ,GAAG,CAACG,IAAJ,CAASA,IAArB,CAAN;AACA,GAVA;AAYD,CAlBS,CAAb,C,CAoBA;;;AACA,IAAMC,SAAS,uBAGbjB,KAAK,CAACK,IAHO,EAGD,UAACH,KAAD,EAAOI,OAAP,EAAiB;AAC7BJ,EAAAA,KAAK,CAACC,QAAN,GAAeG,OAAf;AACA,CALa,CAAf,C,CAOA;;;AACA,IAAMY,OAAO,GAAG,EAAhB;AAIA,eAAe;AACdC,EAAAA,UAAU,EAAE,IADE;AACI;AAClBjB,EAAAA,KAAK,EAALA,KAFc;AAGdE,EAAAA,OAAO,EAAPA,OAHc;AAIda,EAAAA,SAAS,EAATA,SAJc;AAKdC,EAAAA,OAAO,EAAPA;AALc,CAAf","sourcesContent":["import * as types from '../types.js';\r\nimport axios from 'axios'\r\n\r\n//仓库管理存储的数据\r\nconst state = {\r\n\thomeData:[]\r\n}\r\n\r\n//接收组件发送过来的请求 组件可以通过dispath  或者 mapaction 发送到这里\r\nconst actions = {\r\n\t//这个type.home 表示是 从 types这个模块里解出来的成员，\r\n\t//我这里接收到从组件里传过来的请求后 在这里处理业务\r\n\t [types.home]: ({state,commit},payload)=>{\r\n\t\t //方法接受两个参数，第一个是store身上的属性方法，state仓库，commit是用于传递给mutations的方法\r\n\t\t //第二个是负载 就是组件传过来的时候携带的参数\r\n\t    axios({\r\n\t\t\t//这里发送请求 拿到数据\r\n\t      url:'/api/goods/shopList',\r\n\t      params:{_limit:6,token:'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZjE5OWE0ZDUwMWM4Y2E2MTFkMmZjNTkiLCJpYXQiOjE1OTcyMzIyNTEsImV4cCI6MTU5NzMxODY1MX0.JXT9wee5kBiaHLIJJZ5MrPrEiJNCrxXbcRgNcPSAM_M'}\r\n\t    }).then(\r\n\t      res=>{\r\n\t\t\t  console.log(res.data.data)\r\n\t\t\t  //拿到请求回来的数据后，使用commit方法向mutations发送过去\r\n\t\t\t  //第一个参数是mutations写好的方法名，第二个是负载 \r\n\t\t\t  commit(types.home,res.data.data)\r\n\t\t  }\r\n\t    )\r\n\t  },\r\n}\r\n//接收actions发送过来的请求\r\nconst mutations = {\r\n\t//这里接收action发送过来的请求 \r\n\t//直接对state 里面的成员进行赋值  就是把action带过来的数据付给state的成员\r\n\t[types.home]:(state,payload)=>{\r\n\t\tstate.homeData=payload\r\n\t}\r\n}\r\n//处理一下结果\r\nconst getters = {\r\n\t\r\n}\r\n\r\nexport default {\r\n\tnamespaced: true, //命名空间的模块。模块内部直接调用，外部需要命名空间(见组件)\r\n\tstate,\r\n\tactions,\r\n\tmutations,\r\n\tgetters\r\n}\n"]}]}